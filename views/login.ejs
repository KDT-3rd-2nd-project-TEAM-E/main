<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta
      name="google-signin-client_id"
      content="578171222361-iaustilvoe8n5qeuj5j1fvap70gs2a35.apps.googleusercontent.com"
    />
    <title>Login Page</title>
    <!-- CSS only -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi"
      crossorigin="anonymous"
    />
    <!-- JavaScript Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
      crossorigin="anonymous"
    ></script>
    <!-- axios -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="/static/css/login.css" />
  </head>
  <body>
    <div class="container">
      <div class="wrap">
        <div class="title">
          <span>Welcome!</span> KCAL-CAL에 오신 것을 환영합니다!
        </div>
        <hr />
        <form name="form_login">
           <!-- 카카오 -->
           <div class="socialLogin">
            <div class="loginText">
            <h2>카카오로 로그인</h2>
            <!-- <p>아이디와 비밀번호 입력하기 귀찮으시죠? <br>
               카카오로 1초 만에 로그인 하세요! -->
            </p>
          </div>

          <a href="javascript:void(0)">
            <img
              src="/static/img/kakao_login_large_narrow.png"
              alt="카카오"
              id="kkoLoginBtn"
              onclick="kakaoLogin();"
            />
          </a>
          <div class="loginText">
            <h2>카카오로 회원가입</h2>
          </div>
            <a href="javascript:void(0)">
              <img
                src="/static/img/kakao_login_medium_wide.png"
                alt="카카오"
                id="kkoSignupBtn"
                onclick="kakaoLogin();"
              />
            </a>



          </div>

          <span class="hr-sect">또는</span>



          <div class="id">
            <input
              type="text"
              class="inputBox"
              name="id"
              id="id"
              placeholder="아이디를 입력해주세요."
              required
            />
            <div id="idError" class="error"></div>
          </div>

          <div class="pw">
            <input
              type="password"
              class="inputBox"
              name="pw"
              id="pw"
              placeholder="비밀번호를 입력해주세요."
              required
            />
            <div id="pwError" class="error"></div>
          </div>

          <div class="login">
            <button type="button" id="loginBtn" onclick="login();">
              로그인
            </button>
            <br />

            <div class="loginEtc">
              <ul>
                <li>
                  <a
                    role="button"
                    data-bs-toggle="modal"
                    data-bs-target="#findId"
                    >아이디찾기</a
                  >
                </li>
                <li>
                  <a
                    rold="button"
                    data-bs-toggle="modal"
                    data-bs-target="#findPw"
                    >비밀번호찾기</a
                  >
                </li>
                <li><a href="/signup">회원가입</a></li>
              </ul>
            </div>
                <!-- <li onclick="kakaoLogout();">
                <a href="javascript:void(0)">
                  <span>카카오 로그아웃</span>
                </a>
              </li> -->
              </ul>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- 아이디찾기 모달(vertically centered) -->
    <div
      class="modal fade"
      id="findId"
      data-bs-backdrop="static"
      data-bs-keyboard="false"
      tabindex="-1"
      aria-labelledby="staticBackdropLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="staticBackdropLabel">
              아이디 찾기
            </h1>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <div class="oneine">
              <input
                type="text"
                id="findUseremail"
                class="inputBox"
                placeholder="회원가입시 등록한 이메일 입력"
              />
              <button type="button" id="lookupEmail" onclick="lookup(); ">
                이메일 조회
              </button>
            </div>
            <div id="showId"></div>
            <br />
            <div class="loginEtc">
              <ul>
                <li>
                  <a
                    rold="button"
                    data-bs-toggle="modal"
                    data-bs-target="#findPw"
                  >
                    비밀번호 찾기</a
                  >
                </li>
                <li>
                  <a href="/login">로그인 하러 가기</a>
                </li>
              </ul>
            </div>
          </div>
          <div class="modal-footer">
            <!-- <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary">Understood</button> -->
          </div>
        </div>
      </div>
    </div>

    <!-- 비번찾기 모달(vertically centered) -->
    <div
      class="modal fade"
      id="findPw"
      data-bs-backdrop="static"
      data-bs-keyboard="false"
      tabindex="-1"
      aria-labelledby="staticBackdropLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="staticBackdropLabel">
              비밀번호 찾기
            </h1>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <div class="oneine">
              <input
                type="text"
                id="findUseremail"
                class="inputBox"
                placeholder="회원가입시 등록한 이메일 입력"
              />
              <button type="button" id="lookupEmail" onclick="sendEmail(); ">
                인증번호 전송
              </button>
            </div>
            <!--전송완료 여부 -->
            <div id="showResult"></div>
            <br />
            <div class="loginEtc">
              <ul>
                <li>
                  <a
                    role="button"
                    data-bs-toggle="modal"
                    data-bs-target="#findId"
                  >
                    아이디 찾기</a
                  >
                </li>
                <li>
                  <a href="/login">로그인 하러 가기</a>
                </li>
              </ul>
            </div>
          </div>
          <div class="modal-footer">
            <!-- <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary">Understood</button> -->
          </div>
        </div>
      </div>
    </div>
    <!-- 카카오 로그인 api 스크립트 -->
    <script src="https://developers.kakao.com/sdk/js/kakao.js"></script>
    <!-- 네이버 로그인 api 스크립트 -->
    <!-- <script
      src="https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js"
      charset="utf-8"
    ></script> -->
    <!-- 구글 로그인 api 스크립트 -->
    <!-- <script
      src="https://apis.google.com/js/platform.js?onload=init"
      async
      defer
    ></script> -->

    <!-- 로그인 버튼 -->
    <script src="/static/js/login.js"></script>

    <script>
      // Kakao.init("2609470f9ce5ccc0f948de565ceda807"); //발급받은 키 중 javascript키를 사용해준다.
      // console.log(Kakao.isInitialized()); // sdk초기화여부판단
      // //카카오로그인
      // function kakaoLogin() {
      //   Kakao.Auth.login({
      //     success: function (response) {
      //       Kakao.API.request({
      //         url: "/v2/user/me",
      //         success: function (response) {
      //           console.log(response);
      //         },
      //         fail: function (error) {
      //           console.log(error);
      //         },
      //       });
      //     },
      //     fail: function (error) {
      //       console.log(error);
      //     },
      //   });
      // }
      // //카카오로그아웃
      // function kakaoLogout() {
      //   if (Kakao.Auth.getAccessToken()) {
      //     Kakao.API.request({
      //       url: "/v1/user/unlink",
      //       success: function (response) {
      //         console.log(response);
      //       },
      //       fail: function (error) {
      //         console.log(error);
      //       },
      //     });
      //     Kakao.Auth.setAccessToken(undefined);
      //   }
      // }
      // 네이버 로그인
      //   var naverLogin = new naver.LoginWithNaverId({
      //     clientId: "C3dt4QoaXUtAKOrk2Qju", //내 애플리케이션 정보에 cliendId를 입력해줍니다.
      //     callbackUrl: "http://localhost:8000/naverLogin", // 내 애플리케이션 API설정의 Callback URL 을 입력해줍니다.
      //     isPopup: false,
      //     callbackHandle: true,
      //   });
      //   naverLogin.init();
      //   window.addEventListener("load", function () {
      //     naverLogin.getLoginStatus(function (status) {
      //       if (status) {
      //         var email = naverLogin.user.getEmail(); // 필수로 설정할것을 받아와 아래처럼 조건문을 줍니다.
      //         console.log(naverLogin.user);
      //         if (email == undefined || email == null) {
      //           alert("이메일은 필수정보입니다. 정보제공을 동의해주세요.");
      //           naverLogin.reprompt();
      //           return;
      //         }
      //       } else {
      //         console.log("callback 처리에 실패하였습니다.");
      //       }
      //     });
      //   });
      //   // 네이버 로그아웃
      //   // 네이버는 이용자 보호를 위해 정책상 네이버 이외의 서비스에서 로그아웃을 수행하는 것을 허락하지 않는다고 합니다.
      //   // => 팝업으로 네이버창을 띄우고 그 창에서 로그아웃 처리 한 후 자동으로 창 닫히게 수행
      //   var testPopUp;
      //   function openPopUp() {
      //     testPopUp = window.open(
      //       "https://nid.naver.com/nidlogin.logout",
      //       "_blank",
      //       "toolbar=yes,scrollbars=yes,resizable=yes,width=1,height=1"
      //     );
      //   }
      //   function closePopUp() {
      //     testPopUp.close();
      //   }
      //   function naverLogout() {
      //     openPopUp();
      //     setTimeout(function () {
      //       closePopUp();
      //     }, 10);
      //   }
      //   // 구글 로그인
      //   //처음 실행하는 함수
      //   function init() {
      //     gapi.load("auth2", function () {
      //       gapi.auth2.init();
      //       options = new gapi.auth2.SigninOptionsBuilder();
      //       options.setPrompt("select_account");
      //       // 추가는 Oauth 승인 권한 추가 후 띄어쓰기 기준으로 추가
      //       options.setScope(
      //         "email profile openid https://www.googleapis.com/auth/user.birthday.read"
      //       );
      //       // 인스턴스의 함수 호출 - element에 로그인 기능 추가
      //       // GgCustomLogin은 li태그안에 있는 ID, 위에 설정한 options와 아래 성공,실패시 실행하는 함수들
      //       gapi.auth2
      //         .getAuthInstance()
      //         .attachClickHandler(
      //           "GgCustomLogin",
      //           options,
      //           onSignIn,
      //           onSignInFailure
      //         );
      //     });
      //   }
      //   function onSignIn(googleUser) {
      //     var access_token = googleUser.getAuthResponse().access_token;
      //     $.ajax({
      //       // people api를 이용하여 프로필 및 생년월일에 대한 선택동의후 가져온다.
      //       url: "https://people.googleapis.com/v1/people/me",
      //       // key에 자신의 API 키를 넣습니다.
      //       data: {
      //         personFields: "birthdays",
      //         key: "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",
      //         access_token: access_token,
      //       },
      //       method: "GET",
      //     })
      //       .done(function (e) {
      //         //프로필을 가져온다.
      //         var profile = googleUser.getBasicProfile();
      //         console.log(profile);
      //       })
      //       .fail(function (e) {
      //         console.log(e);
      //       });
      //   }
      //   function onSignInFailure(t) {
      //     console.log(t);
      //   }
    </script>
  </body>
</html>
